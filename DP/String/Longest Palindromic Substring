/* First Approach using rec + memo */
/* TC -> O(n^2)  || SC -> O(n^2)
class Solution {
public:

    bool solve(int i, int j, string &s,vector<vector<int>> &t) {
        if (i > j) return 1;
        if (t[i][j] != -1) return t[i][j];

        if(s[i] == s[j]) {
            return t[i][j] = solve(i+1,j-1,s,t);
        }else {
            return false;
        }
    }

    string longestPalindrome(string s) {
        vector<vector<int>> t(1001,vector<int> (1001,-1));
        int n = s.length();
        int si = 0;
        int len = 0;

        for(int i = 0; i < n; i++) {
            for(int j = i; j < n; j++) {
                if(solve(i,j,s,t)) {
                    if (j - i + 1 > len) {
                        si = i;
                        len = j - i + 1;
                    }
                }
            }
        }

        string ans = s.substr(si,len);
        return ans;
    }
};
